name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Print debug info
      run: |
        echo "Authenticated as:"
        gcloud auth list
        echo "Service account details:"
        gcloud iam service-accounts describe ${{ secrets.GCP_SERVICE_ACCOUNT }}
        echo "Current project:"
        gcloud config get-value project
        
    - name: Create Dockerfile if not exists
      run: |
        if [ ! -f "Dockerfile" ]; then
          echo "Creating a basic Dockerfile..."
          cat > Dockerfile << 'EOL'
          FROM python:3.9-slim
          WORKDIR /app
          COPY . .
          RUN pip install flask gunicorn
          CMD exec gunicorn --bind :$PORT --workers 1 --threads 8 app:app
          EOL
          
          # Create a simple Flask app if it doesn't exist
          if [ ! -f "app.py" ]; then
            cat > app.py << 'EOL'
            from flask import Flask
            app = Flask(__name__)
            
            @app.route('/')
            def hello():
                return 'Hello, World! This is a GitHub Actions deployment to Cloud Run.'
            
            if __name__ == '__main__':
                app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 8080)))
            EOL
          fi
        fi
      
    - name: Try to build and push Docker image
      run: |
        # Configure Docker to use gcloud as a credential helper
        gcloud auth configure-docker gcr.io -q
        
        # Build the Docker image
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/gcp-publishing:latest .
        
        # Push the image to Container Registry
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/gcp-publishing:latest
      
    - name: Deploy to Cloud Run with pre-built image
      run: |
        gcloud run deploy gcp-publishing \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/gcp-publishing:latest \
          --region=us-central1 \
          --platform=managed \
          --allow-unauthenticated