name: Deploy to E2 VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Setup SSH for VM
      run: |
        # Generate a temporary SSH key
        ssh-keygen -t rsa -b 4096 -C "github-actions" -f ~/.ssh/google_compute_engine -N ""
        
        # Get the public key content
        SSH_PUBLIC_KEY=$(cat ~/.ssh/google_compute_engine.pub)
        
        # Add the SSH key to the VM's metadata
        gcloud compute instances add-metadata my-app-server \
          --zone=us-central1-a \
          --metadata="ssh-keys=github-actions:${SSH_PUBLIC_KEY}"
      
    - name: Build the application
      run: |
        # Add build steps here, for example:
        # npm install
        # npm run build
        
    - name: Deploy to E2 VM
      run: |
        # Create a deployment directory
        gcloud compute ssh github-actions@my-app-server --zone=us-central1-a --command="mkdir -p ~/app"
        
        # Copy the application files to the VM
        gcloud compute scp --recurse --zone=us-central1-a ./* github-actions@my-app-server:~/app/
        
        # Run deployment commands on the VM
        gcloud compute ssh github-actions@my-app-server --zone=us-central1-a --command="cd ~/app && ./deploy.sh"