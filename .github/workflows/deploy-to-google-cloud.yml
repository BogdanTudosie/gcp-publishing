name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  # Allow manual triggering
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Check API Status
      run: |
        echo "Checking enabled APIs..."
        gcloud services list --enabled
    
    - name: Enable Required APIs
      run: |
        echo "Enabling required APIs..."
        gcloud services enable run.googleapis.com
        gcloud services enable artifactregistry.googleapis.com
        gcloud services enable cloudbuild.googleapis.com
        gcloud services enable iam.googleapis.com
      continue-on-error: true
      
    - name: Create Artifact Registry Repository
      run: |
        # Check if repository exists, if not create it
        if ! gcloud artifacts repositories describe cloud-run-source-deploy --location=us-central1 &>/dev/null; then
          echo "Creating Artifact Registry repository..."
          gcloud artifacts repositories create cloud-run-source-deploy \
            --repository-format=docker \
            --location=us-central1 \
            --description="Repository for Cloud Run deployments"
        else
          echo "Repository already exists, skipping creation."
        fi
      continue-on-error: true
      
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: my-app-dev
        region: us-central1
        source: .
        # Optional: uncomment if you want unauthenticated access
        # flags: --allow-unauthenticated
      
    - name: Show Deployment URL
      if: ${{ steps.deploy.outputs.url }}
      run: |
        echo "Your application was deployed to: ${{ steps.deploy.outputs.url }}"
        
    - name: Deployment Summary
      run: |
        echo "âœ… Deployment completed"
        echo "Project ID: ${{ secrets.GCP_PROJECT_ID }}"
        echo "Service: my-app-dev"
        echo "Region: us-central1"